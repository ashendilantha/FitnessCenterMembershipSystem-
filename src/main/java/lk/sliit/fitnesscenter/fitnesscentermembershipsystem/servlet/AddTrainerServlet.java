//package lk.sliit.fitnesscenter.fitnesscentermembershipsystem.servlet;////import jakarta.servlet.*;//import jakarta.servlet.http.*;//import jakarta.servlet.annotation.*;//import lk.sliit.fitnesscenter.fitnesscentermembershipsystem.dao.TrainerDAO;//import lk.sliit.fitnesscenter.fitnesscentermembershipsystem.model.FullTimeTrainer;//import lk.sliit.fitnesscenter.fitnesscentermembershipsystem.model.PartTimeTrainer;//import lk.sliit.fitnesscenter.fitnesscentermembershipsystem.model.Trainer;////import java.io.IOException;////@WebServlet(name = "AddTrainerServlet", value = "/AddTrainerServlet")//public class AddTrainerServlet extends HttpServlet {//    @Override//    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {//        String trainerId = request.getParameter("trainerId");//        String name = request.getParameter("name");//        String email = request.getParameter("email");//        String contactNumber = request.getParameter("contactNumber");//        String specialty = request.getParameter("specialty");//        String password = request.getParameter("password");//        String trainerType = request.getParameter("trainerType");////        Trainer trainer;////        if (trainerType.equals("FULLTIME")) {//            double salary = Double.parseDouble(request.getParameter("salary"));//            int workingHours = Integer.parseInt(request.getParameter("workingHours"));//            trainer = new FullTimeTrainer(trainerId, name, email, contactNumber, specialty, password, salary, workingHours);//        } else {//            double hourlyRate = Double.parseDouble(request.getParameter("hourlyRate"));//            int hoursPerWeek = Integer.parseInt(request.getParameter("hoursPerWeek"));//            trainer = new PartTimeTrainer(trainerId, name, email, contactNumber, specialty, password, hourlyRate, hoursPerWeek);//        }////        TrainerDAO trainerDAO = new TrainerDAO();//        boolean success = trainerDAO.addTrainer(trainer);////        if (success) {//            request.setAttribute("message", "Trainer added successfully!");//        } else {//            request.setAttribute("message", "Failed to add trainer. Please try again.");//        }////        request.getRequestDispatcher("addTrainer.jsp").forward(request, response);//    }//}//////package lk.sliit.fitnesscenter.fitnesscentermembershipsystem.servlet;////import jakarta.servlet.*;//import jakarta.servlet.http.*;//import jakarta.servlet.annotation.*;//import lk.sliit.fitnesscenter.fitnesscentermembershipsystem.dao.TrainerDAO;//import lk.sliit.fitnesscenter.fitnesscentermembershipsystem.model.FullTimeTrainer;//import lk.sliit.fitnesscenter.fitnesscentermembershipsystem.model.PartTimeTrainer;//import lk.sliit.fitnesscenter.fitnesscentermembershipsystem.model.Trainer;////import java.io.IOException;////@WebServlet(name = "AddTrainerServlet", value = "/AddTrainerServlet")//public class AddTrainerServlet extends HttpServlet {//    @Override//    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {//        String trainerId = request.getParameter("trainerId");//        String name = request.getParameter("name");//        String email = request.getParameter("email");//        String contactNumber = request.getParameter("contactNumber");//        String specialty = request.getParameter("specialty");//        String password = request.getParameter("password");//        String trainerType = request.getParameter("trainerType");////        Trainer trainer = null;////        try {//            if ("FULLTIME".equals(trainerType)) {//                double salary = Double.parseDouble(request.getParameter("salary"));//                int workingHours = Integer.parseInt(request.getParameter("workingHours"));//                if (salary <= 0 || workingHours <= 0) {//                    throw new IllegalArgumentException("Salary and working hours must be positive");//                }//                trainer = new FullTimeTrainer(trainerId, name, email, contactNumber, specialty, password, salary, workingHours);//            } else if ("PARTTIME".equals(trainerType)) {//                double hourlyRate = Double.parseDouble(request.getParameter("hourlyRate"));//                int hoursPerWeek = Integer.parseInt(request.getParameter("hoursPerWeek"));//                if (hourlyRate <= 0 || hoursPerWeek <= 0) {//                    throw new IllegalArgumentException("Hourly rate and hours per week must be positive");//                }//                trainer = new PartTimeTrainer(trainerId, name, email, contactNumber, specialty, password, hourlyRate, hoursPerWeek);//            } else {//                request.setAttribute("message", "Invalid trainer type. Please select Full-Time or Part-Time.");//                request.getRequestDispatcher("addTrainer.jsp").forward(request, response);//                return;//            }////            TrainerDAO trainerDAO = new TrainerDAO();//            boolean success = trainerDAO.addTrainer(trainer);////            if (success) {//                request.setAttribute("message", "Trainer added successfully!");//            } else {//                request.setAttribute("message", "Failed to add trainer. Please try again.");//            }//        } catch (NumberFormatException e) {//            request.setAttribute("message", "Invalid number format for salary, working hours, hourly rate, or hours per week.");//        } catch (IllegalArgumentException e) {//            request.setAttribute("message", e.getMessage());//        } catch (Exception e) {//            request.setAttribute("message", "An error occurred: " + e.getMessage());//        }////        request.getRequestDispatcher("addTrainer.jsp").forward(request, response);//    }//}package lk.sliit.fitnesscenter.fitnesscentermembershipsystem.servlet;import jakarta.servlet.*;import jakarta.servlet.http.*;import jakarta.servlet.annotation.*;import lk.sliit.fitnesscenter.fitnesscentermembershipsystem.dao.TrainerDAO;import lk.sliit.fitnesscenter.fitnesscentermembershipsystem.model.FullTimeTrainer;import lk.sliit.fitnesscenter.fitnesscentermembershipsystem.model.PartTimeTrainer;import lk.sliit.fitnesscenter.fitnesscentermembershipsystem.model.Trainer;import java.io.IOException;@WebServlet(name = "AddTrainerServlet", value = "/AddTrainerServlet")public class AddTrainerServlet extends HttpServlet {    @Override    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        String trainerId = request.getParameter("trainerId");        String name = request.getParameter("name");        String email = request.getParameter("email");        String contactNumber = request.getParameter("contactNumber");        String specialty = request.getParameter("specialty");        String password = request.getParameter("password");        String trainerType = request.getParameter("trainerType");        Trainer trainer = null;        try {            if ("FULLTIME".equals(trainerType)) {                // Use default values since fields are removed from the form                double defaultSalary = 2000.00; // Default salary                int defaultWorkingHours = 40;    // Default working hours                trainer = new FullTimeTrainer(trainerId, name, email, contactNumber, specialty, password, defaultSalary, defaultWorkingHours);            } else if ("PARTTIME".equals(trainerType)) {                // Use default values since fields are removed from the form                double defaultHourlyRate = 25.00; // Default hourly rate                int defaultHoursPerWeek = 20;     // Default hours per week                trainer = new PartTimeTrainer(trainerId, name, email, contactNumber, specialty, password, defaultHourlyRate, defaultHoursPerWeek);            } else {                request.setAttribute("message", "Invalid trainer type. Please select Full-Time or Part-Time.");                request.getRequestDispatcher("addTrainer.jsp").forward(request, response);                return;            }            TrainerDAO trainerDAO = new TrainerDAO();            boolean success = trainerDAO.addTrainer(trainer);            if (success) {                request.setAttribute("message", "Trainer added successfully!");            } else {                request.setAttribute("message", "Failed to add trainer. Please try again.");            }        } catch (Exception e) {            request.setAttribute("message", "An error occurred: " + e.getMessage());        }        request.getRequestDispatcher("addTrainer.jsp").forward(request, response);    }}