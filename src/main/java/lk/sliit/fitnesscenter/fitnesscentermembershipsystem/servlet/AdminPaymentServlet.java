package lk.sliit.fitnesscenter.fitnesscentermembershipsystem.servlet;import lk.sliit.fitnesscenter.fitnesscentermembershipsystem.dao.PaymentDAO;import jakarta.servlet.*;import jakarta.servlet.http.*;import jakarta.servlet.annotation.*;import lk.sliit.fitnesscenter.fitnesscentermembershipsystem.model.Payment;import java.io.IOException;@WebServlet(name = "AdminPaymentServlet", urlPatterns = {"/admin/payments", "/admin/payments/process"})public class AdminPaymentServlet extends HttpServlet {    private PaymentDAO paymentDAO;    @Override    public void init() {        paymentDAO = new PaymentDAO();    }    @Override    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        String action = request.getServletPath();        try {            switch (action) {                case "/admin/payments/process":                    processPayment(request, response);                    break;                default:                    showAdminDashboard(request, response);                    break;            }        } catch (Exception ex) {            throw new ServletException(ex);        }    }    private void showAdminDashboard(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        request.setAttribute("allPayments", paymentDAO.getAllPayments());        request.setAttribute("queueSize", paymentDAO.getQueueSize());        RequestDispatcher dispatcher = request.getRequestDispatcher("/adminBillingDashboard.jsp");        dispatcher.forward(request, response);    }    private void processPayment(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        Payment processedPayment = paymentDAO.processNextPayment();        if (processedPayment != null) {            request.getSession().setAttribute("paymentSuccess", "Payment processed: " + processedPayment.getPaymentId());        } else {            request.getSession().setAttribute("paymentError", "No payments in queue");        }        response.sendRedirect("../admin/payments");    }}